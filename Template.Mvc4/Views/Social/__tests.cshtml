@{
  ViewBag.Title = "SocialTests";
}
@if (true)
{
  // OPTIONAL! QUnit script (here for intellisense)
  <link rel="stylesheet" href="/content/lib/qunit/qunit.css " />
  <link rel="stylesheet" href="/content/tests.less " type="text/css" />
  <script type="text/javascript" src="@Url.Content("~/Content/lib/qunit/qunit.js")"> </script>
}
<p>&nbsp<a href="http://docs.jquery.com/QUnit">QUnit Homepage</a>
</p>
<h1 id="qunit-header">
  @(Page.Title ?? "QUnit tests")
</h1>
<h2 id="qunit-banner"></h2>
<h2 id="qunit-userAgent"></h2>
<ol id="qunit-tests"></ol>
<!-- Script we're testing -->
<script src="/Content/site.js" type="text/javascript"></script>
<script src="/Content/social.js" type="text/javascript"></script>
<script src="/Content/lib/knockout/knockout-2.0.0.debug.js" type="text/javascript"></script>
<script src="/Content/social_calendar.js" type="text/javascript"></script>
<script src="/Content/lib/knockout/knockout-mapping.js" type="text/javascript"></script>
<script type="text/javascript">
  var Topic = function (id, title, date, notes, actions) {
    return {
      id: id,
      title: title,
      date: new Date(date),
      notes: notes,
      actions: actions
    };
  };

  var Action = function (id, channel, date, notes) {
    return {
      id: id,
      channel: channel,
      date: new Date(date),
      notes: notes
    };
  };

  var topics =
[
   new Topic(1, "name1", "1/1/2000", "notes",
      [
         new Action(1, "twitter", "12/1/1999", "notes_a 2"),
         new Action(2, "twitter", "12/12/1999", "notes_b 2"),
      ]
    ), new Topic(2, "name2", "1/3/2000", "topic2 notes",
       [
          new Action(5, "facebook", "12/1/99", "topic2 action3 notes"),
          new Action(3, "facebook", "12/22/99", "topic2 action3 notes"),
          new Action(4, "meetup", "12/24/99", "topic2 action4 notes"),
       ]
    )
];

  var koTopics = ko.mapping.fromJS(topics);
</script>
<!-- The tests -->
<script type="text/javascript">

  $(function () {
    // calculator_tests.js
    module("Calendar Days");
    test("1/31/2001 should return no actions or topics", function () {
      var myDate = "1/31/2001";
      ok(topics, "topics is a O.K.");
      var myDay = new CalendarDay(myDate, koTopics);
      equals(myDay.date.toString(), new Date(myDate).toString(), "calendarDay.date = correctDate");
      equals(myDay.actions.length, 0, "actions.length===0");
      equals(myDay.topics.length, 0, "topics.length===0");
    });

    test("12/22/1999 should return one action and no topics", function () {
      var myDate = "12/22/1999";
      ok(topics, "topics is a O.K.");
      var myDay = new CalendarDay(myDate, koTopics);
      equals(myDay.date.toString(), new Date(myDate).toString(), "calendarDay.date = correctDate");
      equals(myDay.actions.length, 1, "actions.length===0");
      equals(myDay.actions[0].topicTitle(), "name2", "action[0].topicTitle==='name2'");
      equals(myDay.actions[0].channel(), "facebook", "action[0].channel");
      equals(myDay.topics.length, 0, "topics.length===0");
    });


    test("1/3/2000 should return no actions and one topic", function () {
      var myDate = "1/3/2000";
      ok(topics, "topics is a O.K.");
      var myDay = new CalendarDay(myDate, koTopics);
      equals(myDay.date.toString(), new Date(myDate).toString(), "calendarDay.date = correctDate");
      equals(myDay.actions.length, 0, "actions.length===0");
      equals(myDay.topics.length, 1, "topics.length===1");
      equals(myDay.topics[0].title(), "name2", "topics.title==='name1'");
    });


    test("12/1/1999 should return two actions and no topics", function () {
      var myDate = "12/1/1999";
      ok(topics, "topics is a O.K.");
      var myDay = new CalendarDay(myDate, koTopics);
      equals(myDay.date.toString(), new Date(myDate).toString(), "calendarDay.date = correctDate");
      equals(myDay.actions.length, 2, "actions.length");
      equals(myDay.topics.length, 0, "topics.length");
    });

    test("CalendarDays.length shoud be 42", function () {
      var days = new CalendarDays(koTopics);
      equals(days.length, 42, "days.length");

      days.map(function (day) {
        equals(isNaN(day.date.getTime()), false, "day.date isNaN");
      });

    });
  });
</script>
