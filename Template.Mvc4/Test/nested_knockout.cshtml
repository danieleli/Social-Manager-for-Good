@{
  Page.Title = "Nested Knockout";
}
@{if (false)
  { 
  <script src="../Content/lib/qunit/qunit.js"> </script>
  <script src="../Content/lib/knockout/knockout-1.3.0beta.debug.js"> </script>
  }
}
<script src="/Views/Social/triggers_viewmodel.js"> </script>
<ul class="triggers" data-bind="foreach: triggers" style="width: 500px;">
  <li class="trigger" data-bind="event: {mouseover: $root.selectTrigger}">
    <div class="summary">
      
      <span class='date' data-bind="text: niceDate"></span> - <span class='title' data-bind="text: title">
      
      </span>
      <button class="btn delete danger" style="float:right;" data-bind="click: $root.removeTrigger">x</button>
    </div>
    <ul data-bind="foreach: actions">
      <li class="action" style="clear:both;"><span data-bind="text: niceDate"></span> - <span class="channel"><span
        data-bind="text: channel"></span>
        <button class="btn delete danger" style="float:right;" data-bind="click: $root.removeActionFromTrigger">x</button>
      </span></li>
    </ul>
    <ul class="new-item new-action">
      <li>
        <input placeholder="Date" name="Date1" class="date" type="text" data-bind="value: $data.addActionDate" />
        <input placeholder="Channel" name="Channel" type="text" data-bind="value: $data.addActionChannel" />
        <button data-bind="click: $root.addActionToTrigger" class="btn add primary">+ Add</button>
      </li>
    </ul>
  </li>
</ul>

<style type="text/css">
  .trigger:hover { background: #ddd;}
</style>
<div id="debug">
  <h2>Debug</h2>
  <div data-bind="text: ko.toJSON($data)">
  </div>
</div>


<script>

  myFunction = function (data, event) {
    alert(2);
  }
  $(function () {
    var runtests = true;


    var myData = testUtils.getPageData();
    var vm = new TriggersViewModel(myData);
    ko.applyBindings(vm);


    module("Triggers");

    test("Should bind to template", function () {
      if (!runtests) return true;
      testUtils.refreshTriggers(vm);
      ok(vm, "ViewModel is a O.K.");
      equals(vm.triggers().length, 2, "2 Triggers");
    });


    test("new trigger should show in template", function () {
      if (!runtests) return true;
      testUtils.refreshTriggers(vm);
      var trigger3 = {
        title: "3rd trigger",
        date: new Date("3/15/2012"),
        actions: new Array()
      }
      vm.modelUtils.prepTrigger(trigger3);
      trigger3 = ko.mapping.fromJS(trigger3);
      var initialLength = vm.triggers().length;
      vm.triggers.push(trigger3);
      ok(vm, "ViewModel is a O.K.");

      equals(vm.triggers().length, initialLength + 1, "1 additional trigger");
    });

    test("add new action to trigger", function () {
      if (!runtests) return true;
      testUtils.refreshTriggers(vm);
      ok(vm, "ViewModel is a O.K.");
      var actions = vm.triggers()[1].actions();

      equals(vm.triggers()[0].actions().length, 2, "2 actions in first trigger");
      equals($('.action').length, 2, "2 actions in dom");
      equals(actions.length, 0, "0 actions in 2nd trigger");

      // act 
      action = createActionViewModel("3/2/2333", "action3");
      action = ko.mapping.fromJS(action);
      vm.triggers()[1].actions.push(action);

      // assert
      equals(actions.length, 1, "1 action in 2nd trigger");
      equals($('.action').length, 3, "3 actions in dom");
    });
  });
</script>
